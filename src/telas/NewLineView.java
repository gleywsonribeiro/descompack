/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.Conversor;
import modelo.PaginaPDF;
import modelo.RetanguloPDF;
import org.apache.pdfbox.multipdf.Splitter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;

/**
 *
 * @author Gleywson
 */
public class NewLineView extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaDivideArquivo
     */
    private File arquivo;
    private File[] arquivos;

    public NewLineView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btProcessar = new javax.swing.JButton();
        barraStatus = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        lblPath = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setClosable(true);
        setMaximizable(true);
        setTitle("New Line");

        jLabel1.setText("Selecione os arquivos");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buscar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btProcessar.setText("Processar");
        btProcessar.setEnabled(false);
        btProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarActionPerformed(evt);
            }
        });

        barraStatus.setBackground(new java.awt.Color(204, 204, 204));
        barraStatus.setForeground(new java.awt.Color(0, 102, 102));
        barraStatus.setToolTipText("");
        barraStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        barraStatus.setStringPainted(true);

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addComponent(barraStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btProcessar, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPath)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(4, 4, 4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(btProcessar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(barraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("paraSeguranca");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooserArquivo = new JFileChooser();
        chooserArquivo.setFileFilter(new FileNameExtensionFilter("Arquivo PDF (*.pdf)", "pdf"));
        chooserArquivo.setMultiSelectionEnabled(false);
        chooserArquivo.setApproveButtonText("Selecione o arquivos");
        chooserArquivo.setDialogTitle("Seletor de Notas Fiscais");
        //Configura a possíbilidade de selecionar vários arquivos
        chooserArquivo.setAcceptAllFileFilterUsed(false);

        int escolha = chooserArquivo.showOpenDialog(getParent());
        if (escolha == JFileChooser.APPROVE_OPTION) {
            arquivo = chooserArquivo.getSelectedFile();
            lblPath.setText(arquivo.getAbsolutePath());
            btProcessar.setEnabled(true);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarActionPerformed
        HSSFWorkbook workbook = new HSSFWorkbook();
        HSSFSheet sheet = workbook.createSheet("NF");

        int pagina = 0;
        int linha = 1;

        //---   CABEÇALHO
        List<String> cabecalhos = Arrays.asList(
                "Nº NOTA", "DATA", "UNIDADE", "MUNICÍPIO", "CNPJ", "DESCRIÇÃO", "RECOLHIMENTO", "TRIBUTAÇÃO", "VALOR",
                "IR", "INSS", "PIS", "COFINS",
                "CSLL", "ISS");

        Row linhaCabecalho = sheet.createRow(linha - 1);
        int colunaCabecalho = 0;
        for (String cabecalho : cabecalhos) {
            Cell celula = linhaCabecalho.createCell(colunaCabecalho++);
            celula.setCellValue(cabecalho);

            CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
            Font font = sheet.getWorkbook().createFont();
            font.setBoldweight(Font.BOLDWEIGHT_BOLD);

            cellStyle.setFillForegroundColor(HSSFColor.GREY_40_PERCENT.index);
            cellStyle.setFont(font);
            celula.setCellStyle(cellStyle);
        }

        //Configuracao dos campos a serem retirados
        PaginaPDF paginaPDF = new PaginaPDF(209.89, 297.06);

        List<RetanguloPDF> campos = Arrays.asList(
                new RetanguloPDF("NF", 133.16, 7.28, 17.99, 5.5),
                new RetanguloPDF("Data", 133.16, 13.78, 17.99, 4.26),
                new RetanguloPDF("Unidade", 18.33, 105.24, 200.00, 4.5),
                new RetanguloPDF("Município", 46.14, 78.0, 80.0, 5.5),
                new RetanguloPDF("CNPJ", 46.14, 63.92, 35.00, 3.65),
                new RetanguloPDF("Descrição", 0.0, 0.0, 0.0, 0.0),
                new RetanguloPDF("Recolhimento", 0.0, 0.0, 0.0, 0.0),
                new RetanguloPDF("Tributação", 0.0, 0.0, 0.0, 0.0),
                new RetanguloPDF("Valor", 157.28, 232.64, 38.19, 10.32),
                new RetanguloPDF("IR", 142.81, 183.29, 24.19, 4.4),
                new RetanguloPDF("INSS", 114.0, 183.29, 24.19, 4.4),
                new RetanguloPDF("PIS", 87.48, 183.29, 24.19, 4.4),
                new RetanguloPDF("Cofins", 60.5, 183.29, 24.19, 4.4),
                new RetanguloPDF("CSLL", 168.11, 183.29, 24.19, 4.4)
        );

        try (PDDocument document = PDDocument.load(arquivo)) {
            int numeroPaginas = document.getNumberOfPages();
            Splitter splitter = new Splitter();

            List<PDDocument> pages = splitter.split(document);

            Iterator<PDDocument> iterator = pages.iterator();

            while (iterator.hasNext()) {
                try (PDDocument pdd = iterator.next()) {

                    pagina++;

                    int status = (100 * pagina) / numeroPaginas;
                    barraStatus.setValue(status);
                    barraStatus.getUI().update(barraStatus.getGraphics(), barraStatus);

                    Conversor conversor = new Conversor(paginaPDF, campos, pdd);
                    List<String> dados = conversor.getCamposTexto();

                    Row linhaNota = sheet.createRow(linha++);
                    int coluna = 0;

                    for (int j = 0; j < dados.size(); j++) {
                        Cell celula = linhaNota.createCell(coluna++);
                        if (j >= 8) {
                            celula.setCellType(Cell.CELL_TYPE_NUMERIC);
                            Double value = Double.parseDouble(dados.get(j)
                                    .replace(".", "")
                                    .replace(" ", "")
                                    .replace("$", "")
                                    .replace("R", "")
                                    .replace(",", "."));

                            HSSFCellStyle style = workbook.createCellStyle();
                            style.setDataFormat(workbook.createDataFormat().getFormat("0.00"));

                            celula.setCellValue(value);
                            celula.setCellStyle(style);
                        } else if (j == 0) {
                            celula.setCellValue(Integer.parseInt(dados.get(j)));
                        } else {
                            celula.setCellValue(dados.get(j));
                        }
                    }

                    HSSFCellStyle style = workbook.createCellStyle();
                    style.setDataFormat(workbook.createDataFormat().getFormat("0.00"));

                    Cell cell = linhaNota.createCell(coluna++);
                    cell.setCellValue(0);
                    cell.setCellStyle(style);

                    textArea.append(arquivo.getParent() + "\\" + dados.get(0).trim() + ".pdf" + "\n");
                    pdd.save(arquivo.getParent() + "\\" + dados.get(0).trim() + ".pdf");
                }

                autoSizeColumns(workbook);

            }

            //deve ficar fora dos laços
            try (FileOutputStream stream = new FileOutputStream(new File(arquivo.getParent() + "\\" + "Notas Fiscais - New Line" + ".xls"))) {
                workbook.write(stream);

                stream.flush();
            }
            JOptionPane.showMessageDialog(null, "Processo realizado com sucesso!",
                    "Êxito", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao processar extração de arquivo: " + ex.getMessage(),
                    "Erro!", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btProcessarActionPerformed

    private void autoSizeColumns(HSSFWorkbook workbook) {
        int numberOfSheets = workbook.getNumberOfSheets();
        for (int i = 0; i < numberOfSheets; i++) {
            HSSFSheet sheet = workbook.getSheetAt(i);
            if (sheet.getPhysicalNumberOfRows() > 0) {
                Row row = sheet.getRow(sheet.getFirstRowNum());
                Iterator<Cell> cellIterator = row.cellIterator();
                while (cellIterator.hasNext()) {
                    Cell cell = cellIterator.next();
                    int columnIndex = cell.getColumnIndex();
                    sheet.autoSizeColumn(columnIndex);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraStatus;
    private javax.swing.JButton btProcessar;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPath;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
